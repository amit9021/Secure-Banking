name: CI - Build, Lint, and Test

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  # Server Tests
  server-ci:
    name: Server CI
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    env:
      JWT_TOKEN: test_secret_for_ci_only
      MONGODB_URI: mongodb://127.0.0.1:27017/test_db
      NODE_ENV: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: server/package-lock.json

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.11.0
        with:
          mongodb-version: '7.0'
          mongodb-port: 27017

      - name: Install server dependencies
        working-directory: ./server
        run: npm ci

      - name: Run ESLint
        working-directory: ./server
        run: npm run lint || echo "Lint warnings found"

      - name: Run Prettier check
        working-directory: ./server
        run: npm run format:check || echo "Format issues found"

      - name: Run server tests
        working-directory: ./server
        run: npm test

      - name: Generate coverage report
        working-directory: ./server
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./server/coverage/lcov.info
          flags: server
          name: server-coverage
          fail_ci_if_error: false

  # Client Tests
  client-ci:
    name: Client CI
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install client dependencies
        working-directory: ./client
        run: npm ci

      - name: Run ESLint
        working-directory: ./client
        run: npm run lint || echo "Lint warnings found"

      - name: Run Prettier check
        working-directory: ./client
        run: npm run format:check || echo "Format issues found"

      - name: Build client
        working-directory: ./client
        run: npm run build
        env:
          CI: false  # Treat warnings as warnings, not errors

      - name: Run client tests
        working-directory: ./client
        run: npm run test:coverage || true
        env:
          CI: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: client-build-${{ matrix.node-version }}
          path: client/build/
          retention-days: 7

  # Security Audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Run npm audit on server
        working-directory: ./server
        run: npm audit --audit-level=moderate || true

      - name: Run npm audit on client
        working-directory: ./client
        run: npm audit --audit-level=moderate || true

  # Build summary
  ci-summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [server-ci, client-ci, security-audit]
    if: always()

    steps:
      - name: Check CI status
        run: |
          if [ "${{ needs.server-ci.result }}" == "failure" ] || [ "${{ needs.client-ci.result }}" == "failure" ]; then
            echo "CI failed - check the logs above"
            exit 1
          else
            echo "âœ… All CI checks passed!"
          fi
