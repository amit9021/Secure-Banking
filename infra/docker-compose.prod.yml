services:
  # React Frontend (Production Build)
  client:
    build:
      context: ../client
      dockerfile: ../infra/Dockerfile.client.prod
    ports:
      - "80:80"
    depends_on:
      - server
    networks:
      - app-network
    restart: always

  # Express Backend
  server:
    build:
      context: ../server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=${MONGODB_URI}
      - JWT_TOKEN=${JWT_TOKEN}
      - TWILIO_ACCOUNT_ID=${TWILIO_ACCOUNT_ID}
      - TWILIO_TOKEN=${TWILIO_TOKEN}
      - TWILIO_SERVICE=${TWILIO_SERVICE}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    restart: always

  # MongoDB Database
  mongodb:
    image: mongo:6
    container_name: mongo-container
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=bank_users
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/bank_users --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
