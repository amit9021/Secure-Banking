services:
  # React Frontend
  client:
    build:
      context: ../client
      dockerfile: ../infra/Dockerfile.client
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ../client/src:/app/src
      - /app/node_modules
    depends_on:
      - server
    networks:
      - app-network
    stdin_open: true
    tty: true

  # Express Backend
  server:
    build:
      context: ../server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb://mongodb:27017/bank_users
      - JWT_TOKEN=${JWT_TOKEN:-default_dev_secret_change_in_production}
      - TWILIO_ACCOUNT_ID=${TWILIO_ACCOUNT_ID:-}
      - TWILIO_TOKEN=${TWILIO_TOKEN:-}
      - TWILIO_SERVICE=${TWILIO_SERVICE:-}
    volumes:
      - ../server:/app
      - /app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  # MongoDB Database
  mongodb:
    image: mongo:5
    container_name: mongo-container
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=bank_users
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local 