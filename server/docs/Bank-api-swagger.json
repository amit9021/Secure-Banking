{
  "openapi": "3.0.0",
  "info": {
    "title": "Bank API",
    "description": "API for a simple bank application with endpoints for home, login, register, dashboard, and transfer.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/AMIT9021/Bank/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "http://localhost:5000",
      "description": "Local development server"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Public",
      "description": "Endpoints accessible without authentication"
    },
    {
      "name": "Authenticated",
      "description": "Endpoints requiring user authentication"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": ["Authenticated"],
        "summary": "Check if the user is authenticated",
        "responses": {
          "200": {
            "description": "User is authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/login": {
      "post": {
        "tags": ["Public"],
        "summary": "Login to the application",
        "description": "Authenticates the user with email and password.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid credentials"
          }
        }
      }
    },
    "/register": {
      "get": {
        "tags": ["Authenticated"],
        "summary": "Get user name",
        "responses": {
          "200": {
            "description": "User name retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["Public"],
        "summary": "Register a new user",
        "description": "Creates a new account for the user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/register_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters"
          }
        }
      },
      "delete": {
        "tags": ["Authenticated"],
        "summary": "Delete a user",
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/register/otp_validator": {
      "post": {
        "tags": ["Public"],
        "summary": "Validate OTP",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string"
                  },
                  "otp": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OTP validated successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/register/reset_balance": {
      "put": {
        "tags": ["Authenticated"],
        "summary": "Reset user balance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "balance": {
                    "type": "number",
                    "format": "float"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Balance reset successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/dashboard": {
      "get": {
        "tags": ["Authenticated"],
        "summary": "User dashboard",
        "description": "Displays user's account summary and recent transactions.",
        "responses": {
          "200": {
            "description": "Dashboard details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "balance": {
                          "type": "number",
                          "format": "float"
                        },
                        "Transaction": {
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/transfer": {
      "post": {
        "tags": ["Authenticated"],
        "summary": "Transfer funds",
        "description": "Allows users to transfer funds to another account.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/transfer_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Transfer successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid parameters"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "402": {
            "description": "Payment required - Insufficient funds"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "register_body": {
        "required": ["email", "name", "phone", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "login_body": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "inline_response_200_1": {
        "type": "object",
        "properties": {
          "account_balance": {
            "type": "number",
            "format": "float"
          },
          "recent_transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_1_recent_transactions"
            }
          }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Authentication token"
          }
        }
      },
      "inline_response_200_2": {
        "type": "object",
        "properties": {
          "transaction_id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "example": "success"
          }
        }
      },
      "inline_response_200_1_recent_transactions": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "float"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "transfer_body": {
        "required": ["amount", "to_account"],
        "type": "object",
        "properties": {
          "to_account": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "float"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
